__NUXT_JSONP__("/card/grep", {data:[{html:"\u003Ch1 id=\"grep\"\u003Egrep\u003C\u002Fh1\u003E\n\u003Cp\u003Egrep 一种强大的文本搜索工具，它能使用正则表达式搜索文本，并把匹配的行打印出来。\u003Cbr\u003E\u003Ccode\u003Ematch_patten\u003C\u002Fcode\u003E 是匹配的内容, 可以是正则表达式, 也可以是正常文本; 如果中间有分割字符, 需要使用引号括起来  \u003C\u002Fp\u003E\n\u003Cdiv class=\"card-container\"\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"基本\"\u003E基本\u003C\u002Fh2\u003E\n\u003Cp\u003E指定文件搜索:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep &lt;match_patten&gt; &lt;file1&gt; &lt;file2&gt; ...\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在文件名前缀为 test 的文件中查找 &quot;hello&quot; 字符串:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep hello .\u002Ftest*\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"搜索控制\"\u003E搜索控制\u003C\u002Fh2\u003E\n\u003Cp\u003E搜索忽略大小写:\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -i &lt;match_patten&gt; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E搜索多个匹配内容: \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# Linux: 只要任意一个匹配就显示, 每个匹配模式都在整行查找\n# Mac: 顺序匹配, 即优先匹配 hello, 如果找到 hello, 继续从 hello 之后内容查找 world\ngrep -e hello -e world &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E显示匹配内容的上下文:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 显示匹配内容前后 2 行内容\ngrep -C 2 &lt;match_patten&gt; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"递归搜索\"\u003E递归搜索\u003C\u002Fh2\u003E\n\u003Cp\u003E递归搜索指定目录(\u003Ccode\u003E-r\u003C\u002Fcode\u003E或\u003Ccode\u003E-R\u003C\u002Fcode\u003E):  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep  -r &lt;match_patten&gt; &lt;dir&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E递归搜索指定目录下匹配的文件:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 递归搜索当前目录下所有文件名后缀为 `.md` 的文件中的 &quot;hello world&quot;\ngrep -r &quot;hello world&quot; .\u002F**\u002F*.md\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"忽略目录\"\u003E忽略目录\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E忽略目录是针对目录名,非绝对路径名\n\u003Ccode\u003Eexclude-dir=parrern\u003C\u002Fcode\u003E  \u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E忽略匹配目录:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 递归搜索时忽略任意路径下的 .git 目录\ngrep -r &lt;match_patten&gt; .\u002F* --exclude-dir=.git\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E忽略多个匹配目录:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 递归搜索时忽略任意路径下的 .git, node_modules 目录\n$ grep &lt;match_patten&gt; .\u002F* --exclude-dir=.git --exclude-dir=node_modules\n# 或\n$ grep &lt;match_patten&gt; .\u002F* --exclude-dir={.git,node_modules}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"反向搜索\"\u003E反向搜索\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E反向搜索就是搜索不匹配 \u003Ccode\u003E&lt;match_pattern&gt;\u003C\u002Fcode\u003E 的行  \u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E搜索文件中不包含 &quot;ls&quot; 的行:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -v &quot;ls&quot; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"输出控制\"\u003E输出控制\u003C\u002Fh2\u003E\n\u003Cp\u003E显示行号:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -n hello &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E统计匹配的行数:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -c &lt;match_patten&gt; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E仅打印匹配的内容:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -o &lt;match_patten&gt; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E仅打印包含匹配内容的文件路径:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -l &lt;match_patten&gt; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Eslient 模式, 不显示错误信息:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -s &lt;match_patten&gt; &lt;filename&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"二进制文件\"\u003E二进制文件\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E默认情况下, grep 不会搜索二进制, 但是会匹配到二进制文件\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E忽略搜索二进制文件:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Egrep -I &lt;match_patten&gt; \u002Fbin\u002F*\n# 或\ngrep --binary-files=without-match &lt;match_patten&gt; \u002Fbin\u002F*\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E搜索二进制内容:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 对待二进制文件如文本文件一样\ngrep -a &lt;match_patten&gt; \u002Fbin\u002F*\n# 或\ngrep --binary-files=text &lt;match_patten&gt; \u002Fbin\u002F*\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E",editUrl:"https:\u002F\u002Fgithub.com\u002FMwumLi\u002Fcheatsheets\u002Ftree\u002Fmain\u002Fmarkdowns\u002Fgrep.md"}],fetch:{},mutations:void 0});