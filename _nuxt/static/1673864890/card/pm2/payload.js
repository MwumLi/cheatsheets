__NUXT_JSONP__("/card/pm2", {data:[{html:"\u003Ch1 id=\"pm2\"\u003EPM2\u003C\u002Fh1\u003E\n\u003Cp\u003E\u003Ca href=\"http:\u002F\u002Fpm2.keymetrics.io\u002F\"\u003EPM2\u003C\u002Fa\u003E 是用 Node.js 开发的进程管理工具, 通常用于 Node.js 应用的生产环境运维; 同时, 它也支持其他多种语言(perl\u002Fpython等)程序。  \u003C\u002Fp\u003E\n\u003Cdiv class=\"card-container\"\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"启动node程序\"\u003E启动Node程序\u003C\u002Fh2\u003E\n\u003Cp\u003E启动 \u003Ccode\u003Eapp.js\u003C\u002Fcode\u003E:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 start app.js\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E命名为 \u003Ccode\u003Emy-api\u003C\u002Fcode\u003E:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 一般命名为一个可记忆的名字, 方便其他操作\npm2 start app.js --name my-api\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E传递命令行参数:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 start app.js -- -a 23\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E传递 node V8 选项给 node 进程:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# --debug=7001 是 node v8 的调试服务\npm2 start app.js --node-args=&quot;--debug=7001&quot;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以集群模式启动:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 实现负载均衡, 高效利用 CPU\n# 会同时启动 3 个实例\npm2 start app.js -i 3\n\n# 启动和 cpu 数量等同的实例(推荐)\npm2 start app.js -i 0\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"启动其他语言程序\"\u003E启动其他语言程序\u003C\u002Fh2\u003E\n\u003Cp\u003E默认支持的语言类型:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# key 为文件后缀, value 为解释器\n{\n    &quot;.sh&quot;: &quot;bash&quot;,\n    &quot;.py&quot;: &quot;python&quot;,\n    &quot;.rb&quot;: &quot;ruby&quot;,\n    &quot;.coffee&quot; : &quot;coffee&quot;,\n    &quot;.php&quot;: &quot;php&quot;,\n    &quot;.pl&quot; : &quot;perl&quot;,\n    &quot;.js&quot; : &quot;node&quot;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E指定解释器:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 start echo.pl --interpreter=perl\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E执行二进制程序:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 start .\u002Fbinary-app\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"管理进程\"\u003E管理进程\u003C\u002Fh2\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E\u003Ccode\u003Eall\u003C\u002Fcode\u003E: 表示 pm2 进程列表所有进程\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E列出所有进程:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 list\npm2 ls\npm2 status\npm2 ps\npm2 l\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E停止进程:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 stop &lt;name|id|all&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E停止并移除进程:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 delete &lt;name|id|all&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E重启进程:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# start &amp;&amp; start\npm2 restart &lt;name\u002Fid|all&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E热启动:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# cluster 模式并且是 http\u002Fhttps 应用\npm2 reload &lt;name\u002Fall&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E查看进程的详细参数:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 describe &lt;id&gt;\npm2 desc &lt;id&gt;\npm2 info &lt;id&gt;\npm2 show &lt;id&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E重置进程重启计数器:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 重启次数就变为 0\npm2 reset &lt;name\u002Fid\u002Fall&gt;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"服务\"\u003E服务\u003C\u002Fh2\u003E\n\u003Cp\u003E产生服务脚本并加入开机自启动:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 不需要指定平台, 会自动探测; 如果不能执行, 也会给出提示\npm2 startup\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E卸载开机自启动服务:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 unstartup\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E更新开机自启动服务:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 以防 Node 安装位置发生改变\n# 比如时候 nvm 安装\u002F切换其他版本 node\npm2 unstartup &amp;&amp; pm2 startup\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"进程转储\"\u003E进程转储\u003C\u002Fh2\u003E\n\u003Cp\u003E保存当前进程列表:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 保存位置: $PM2_HOME\u002F.pm2\u002Fdump.pm2\n# pm2 开机自启动服务会在机器重启的情况下自动重启这些服务 \npm2 save\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E手动恢复进程:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 手动唤起以前通过 `pm2 save` 保存的进程\npm2 resurrect\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E清空进程列表:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 会把文件 $PM2_HOME\u002F.pm2\u002Fdump.pm2 清空\npm2 cleardump\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003Cdiv class=\"h2-block\"\u003E\u003Ch2 id=\"日志\"\u003E日志\u003C\u002Fh2\u003E\n\u003Cp\u003E日志文件: \u003Ccode\u003E~\u002F.pm2\u002Flogs\u003C\u002Fcode\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E实时查看日志:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003E# 默认查看所有进程的日志\npm2 logs [id|name]\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E清空日志:  \u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode\u003Epm2 flush\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E",editUrl:"https:\u002F\u002Fgithub.com\u002FMwumLi\u002Fcheatsheets\u002Ftree\u002Fmaster\u002Fmarkdowns\u002Fpm2.md"}],fetch:{},mutations:void 0});